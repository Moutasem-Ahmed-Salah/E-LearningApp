//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_LearningApp.StudentServices {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentServices.StudentServiceSoap")]
    public interface StudentServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StudentSign", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool StudentSign(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StudentSign", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> StudentSignAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StudentRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void StudentRegister(string name, string address, string area, string mobileNumber, string username, string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StudentRegister", ReplyAction="*")]
        System.Threading.Tasks.Task StudentRegisterAsync(string name, string address, string area, string mobileNumber, string username, string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddToCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddToCart(int StudentID, int CourseID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddToCart", ReplyAction="*")]
        System.Threading.Tasks.Task AddToCartAsync(int StudentID, int CourseID, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateCart(int shoppingCartID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCart", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateCartAsync(int shoppingCartID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteCart(int shoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCart", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteCartAsync(int shoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ViewCart(int studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewCart", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewCartAsync(int studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CourseDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] CourseDetail(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CourseDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> CourseDetailAsync(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewCourses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ViewCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewCourses", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTotal(int studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTotal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTotalAsync(int studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ConfirmOrder(int studentID, int total);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmOrder", ReplyAction="*")]
        System.Threading.Tasks.Task ConfirmOrderAsync(int studentID, int total);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StudentServiceSoapChannel : E_LearningApp.StudentServices.StudentServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentServiceSoapClient : System.ServiceModel.ClientBase<E_LearningApp.StudentServices.StudentServiceSoap>, E_LearningApp.StudentServices.StudentServiceSoap {
        
        public StudentServiceSoapClient() {
        }
        
        public StudentServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool StudentSign(string username, string password) {
            return base.Channel.StudentSign(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> StudentSignAsync(string username, string password) {
            return base.Channel.StudentSignAsync(username, password);
        }
        
        public void StudentRegister(string name, string address, string area, string mobileNumber, string username, string password, string mail) {
            base.Channel.StudentRegister(name, address, area, mobileNumber, username, password, mail);
        }
        
        public System.Threading.Tasks.Task StudentRegisterAsync(string name, string address, string area, string mobileNumber, string username, string password, string mail) {
            return base.Channel.StudentRegisterAsync(name, address, area, mobileNumber, username, password, mail);
        }
        
        public void AddToCart(int StudentID, int CourseID, int Quantity) {
            base.Channel.AddToCart(StudentID, CourseID, Quantity);
        }
        
        public System.Threading.Tasks.Task AddToCartAsync(int StudentID, int CourseID, int Quantity) {
            return base.Channel.AddToCartAsync(StudentID, CourseID, Quantity);
        }
        
        public void UpdateCart(int shoppingCartID, int quantity) {
            base.Channel.UpdateCart(shoppingCartID, quantity);
        }
        
        public System.Threading.Tasks.Task UpdateCartAsync(int shoppingCartID, int quantity) {
            return base.Channel.UpdateCartAsync(shoppingCartID, quantity);
        }
        
        public void DeleteCart(int shoppingCartID) {
            base.Channel.DeleteCart(shoppingCartID);
        }
        
        public System.Threading.Tasks.Task DeleteCartAsync(int shoppingCartID) {
            return base.Channel.DeleteCartAsync(shoppingCartID);
        }
        
        public System.Data.DataTable ViewCart(int studentID) {
            return base.Channel.ViewCart(studentID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewCartAsync(int studentID) {
            return base.Channel.ViewCartAsync(studentID);
        }
        
        public string[] CourseDetail(string courseName) {
            return base.Channel.CourseDetail(courseName);
        }
        
        public System.Threading.Tasks.Task<string[]> CourseDetailAsync(string courseName) {
            return base.Channel.CourseDetailAsync(courseName);
        }
        
        public System.Data.DataTable ViewCourses() {
            return base.Channel.ViewCourses();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewCoursesAsync() {
            return base.Channel.ViewCoursesAsync();
        }
        
        public System.Data.DataTable GetTotal(int studentID) {
            return base.Channel.GetTotal(studentID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTotalAsync(int studentID) {
            return base.Channel.GetTotalAsync(studentID);
        }
        
        public void ConfirmOrder(int studentID, int total) {
            base.Channel.ConfirmOrder(studentID, total);
        }
        
        public System.Threading.Tasks.Task ConfirmOrderAsync(int studentID, int total) {
            return base.Channel.ConfirmOrderAsync(studentID, total);
        }
    }
}
